@page "/login"
@layout ClkTeknoloji.CustomerDashboard.WebUI.Shared.EmptyLayout


<head>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<center class="login-page-container mb-1 mt-4">
    <div class="img-container">
        <img src="_content/ClkTeknoloji.CustomerDashboard/images/clkLogo.png" asp-append-version="true" width="120" />
    </div>
    <div class="login-logo">
        <a href="/" class="login-text">
            <p>Clk Teknoloji Teknik Takip Sistemi</p>
        </a>
    </div>
    <div class="login-box card">
        <h4 class="login-label">Login Ekranı</h4>
        <EditForm Model="userLoginRequest" OnValidSubmit="@( () => LoginProcess())" autocomplete="off">
            <DataAnnotationsValidator />
            <div class="form-group">
                <div class="input-group">
                    <InputText @bind-Value="userLoginRequest.EMail" type="text"
                               class="form-control"
                               placeholder="Email Adresiniz"
                               maxlength="256" />
                    <div class="input-group-append">
                        <div class="input-group-text icons-box">
                            <span class="material-icons">person</span>
                        </div>
                    </div>
                </div>
                <div class="validation-message">
                    <ValidationMessage For="@(()=> userLoginRequest.EMail)" />
                </div>
            </div>
            <div class="form-group">
                <div class="input-group">
                    <InputText @bind-Value="userLoginRequest.Password" type="password"
                               class="form-control"
                               placeholder="Şifreniz"
                               maxlength="32" />
                    <div class="input-group-append">
                        <div class="input-group-text icons-box">
                            <span class="material-icons">lock</span>
                        </div>
                    </div>
                </div>
                <div class="validation-message">
                    <ValidationMessage For="@(()=> userLoginRequest.Password)" />
                </div>
            </div>
            <div class="form-group row check-remember-me">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" checked="" />
                    <label for="rememberMe">
                        Beni Hatırla
                    </label>
                </div>
            </div>
            <p class="text-danger" style="font-size: 12px;">@error</p>
            <div class="form-group row login-btn mr-0 ml-0 pr-0 pl-0">
                <button type="submit"
                        class="btn btn-primary btn-block">
                    Giriş
                </button>
            </div>
        </EditForm>
        <div class="mb-1 forgot-password">
            <a>
                <p>Şifremi Unuttum</p>
            </a>
        </div>
        <div class="row">
            <div class="col-3"></div>
            <div class="col-6">
                <div class="row">
                    <div class="col-2 ml-2">
                        <span class="material-icons" style="color:grey; padding-top: 2px;">language</span>
                    </div>
                    <div class="col-8">
                        <select class="form-control form-control-sm">
                            <option value="tr" selected>Türkçe</option>
                            <option value="en">İngilizce</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="col-3"></div>
        </div>
    </div>
</center>


@code {
    string error;

    [Inject] HttpClient httpClient { get; set; }

    [Inject] NavigationManager navManager { get; set; }

    [Inject] IUserService userSerivce { get; set; }

    [Inject] ILocalStorageService localStorageService { get; set; }

    private UserLoginRequest userLoginRequest = new UserLoginRequest();

    private async Task LoginProcess()
    {
        var userResponse = await userSerivce.UserLogin(userLoginRequest);

        if (userResponse.User != null)
        {
            try
            {
                await localStorageService.SetItemAsync("token", userResponse.ApiToken);
                await localStorageService.SetItemAsync("email", userResponse.User.EMailAddress);
                await localStorageService.SetItemAsync("UserId", userResponse.User.Id.ToString());
                await localStorageService.SetItemAsync("UserFullName", userResponse.User.FullName);
                navManager.NavigateTo("/");
               // (authenticationStateProvider as AuthStateProvider).NotifyUserLogin(res.Value.User.EMailAddress); //bir kullanıcı giriş yaptı bundan kullanıcı oluşturacak isteğim yerde kullanabileceğiz.

                //    //httpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", res.Value.ApiToken);
                //    navManager.NavigateTo("/");
                //}
                //else
                //{
                //    //await modalManager.ShowMessageAsync("Login Error", res.Message);
                //}


            }
            catch (Exception ex)
            {

                //  await modalManager.ShowMessageAsync("Login Error", ex.Message);
            }

        }
    }


}
