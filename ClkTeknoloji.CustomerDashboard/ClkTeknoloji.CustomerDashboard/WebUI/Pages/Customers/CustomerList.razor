@page "/customerslist"

<h3>Müşteri Listesi</h3>

<div class="btn-group">
    <div class="container">
        <button class="btn btn-primary" @onclick="goCreateCustomerPage">Yeni Müşteri Oluştur</button>
    </div>
</div>
<br />
@if (customersList != null)
{
    <table class="table table-hover table-sm">
        <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Adı Soyadı</th>
                <th scope="col">Telefon Numarası</th>
                <th scope="col">Oluşturulma Tarihi</th>
                <th scope="col">Adres</th>
                <th scope="col">Müşterinin Kayıtlı Ürünleri</th>
                <th scope="col">#</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customersList)
            {
            <tr>
                <td>@customer.Id</td>
                <td>@customer.FirstName @customer.LastName</td>
                <td>@customer.PhoneNumber</td>
                <td>@customer.CreateDate</td>
                <td>@customer.Address</td>
                <td>@customer.Products.Count()</td>

                <td>
                    <button class="btn btn-danger" @onclick="@(()=>DeleteCustomer(customer.Id))">Sil</button>
                    <button class="btn btn-success" @onclick="(() => goUpdatePage(customer.Id))">Güncelle</button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    [Inject] public HttpClient HttpClient { get; set; }

    [Inject] public ICustomerService customerService { get; set; }

    [Inject] NavigationManager navigationManager { get; set; }

    public List<CustomerDto> customersList = new List<CustomerDto>();

    protected override async Task OnInitializedAsync()
    {
        await LoadList();
    }
    protected void goCreateCustomerPage()
    {
        navigationManager.NavigateTo("/customers/add");
    }
    protected void goUpdatePage(int customerId)
    {
        navigationManager.NavigateTo($"/customers/edit/{customerId}");
    }
    protected async Task LoadList()
    {
        customersList = (await customerService.GetAllCustomer()).ToList();

    }
    protected async Task DeleteCustomer(int Id)
    {

        await customerService.DeleteCustomerById(Id);
        await LoadList();
    }
}
